{"version":3,"sources":["js/03-feedback.js"],"names":["refs","emailInput","document","querySelector","firstElementChild","children","messageInput","formInput","submitButton","formData","inputData","messageData","previousFormData","JSON","parse","localStorage","getItem","error","console","log","value","formInputHandler","event","setItem","stringify","submitHandler","preventDefault","currentTarget","reset","addEventListener"],"mappings":";AA2BA,MAAMA,EAAO,CACTC,WAAYC,SAASC,cAAc,kBAAkBC,kBAAkBC,SAAS,GAChFC,aAAcJ,SAASC,cAAc,mBAAmBE,SAAS,GAAGA,SAAS,GAC7EE,UAAWL,SAASC,cAAc,mBAClCK,aAAaN,SAASC,cAAc,0BAGlCM,EAAW,CACbC,UAAU,GACVC,YAAY,IAEhB,IAAIC,EAEH,IACGA,EAAmBC,KAAKC,MAAMC,aAAaC,QAAQ,wBAErD,MAAOC,GACLC,QAAQC,IAAIF,GAEVL,EAAiBF,WAAaE,EAAiBD,cAChDX,EAAKC,WAAWmB,MAAQR,EAAiBF,UACzCV,EAAKM,aAAac,MAAQR,EAAiBD,aAGhD,MAAMU,EAAoBC,IACtBb,EAASC,UAAYV,EAAKC,WAAWmB,MACrCX,EAASE,YAAcX,EAAKM,aAAac,MACzCL,aAAaQ,QAAQ,sBAAuBV,KAAKW,UAAUf,KAGzDgB,EAAiBH,IACnBA,EAAMI,iBACNR,QAAQC,IAAI,cAAgBP,EAAiBF,WAC7CQ,QAAQC,IAAI,gBAAkBP,EAAiBD,aAC/CW,EAAMK,cAAcC,SAGxB5B,EAAKO,UAAUsB,iBAAiB,QAASR,GACzCrB,EAAKO,UAAUsB,iBAAiB,SAAUJ","file":"03-feedback.08dbeee9.js","sourceRoot":"../src","sourcesContent":["/* В HTML есть разметка формы. Напиши скрипт который будет сохранять значения полей в локальное хранилище \nкогда пользователь что-то печатает.\n\n<form class=\"feedback-form\" autocomplete=\"off\">\n  <label>\n    Email\n    <input type=\"email\" name=\"email\" autofocus />\n  </label>\n  <label>\n    Message\n    <textarea name=\"message\" rows=\"8\"></textarea>\n  </label>\n  <button type=\"submit\">Submit</button>\n</form>\nВыполняй это задание в файлах 03-feedback.html и 03-feedback.js. \n\nРазбей его на несколько подзадач:\n    1. Отслеживай на форме событие input, и каждый раз записывай в локальное хранилище объект с полями email и message, \nв которых сохраняй текущие значения полей формы. Пусть ключом для хранилища будет строка \"feedback-form-state\".\n    2. При загрузке страницы проверяй состояние хранилища, и если там есть сохраненные данные, заполняй ими поля формы. \nВ противном случае поля должны быть пустыми.\n    3. При сабмите формы очищай хранилище и поля формы, а также выводи объект с полями email, message \nи текущими их значениями в консоль.\n    4. Сделай так, чтобы хранилище обновлялось не чаще чем раз в 500 миллисекунд. \nДля этого добавь в проект и используй библиотеку lodash.throttle.\n */\n\nconst refs = {\n    emailInput: document.querySelector('.feedback-form').firstElementChild.children[0],\n    messageInput: document.querySelector('.feedback-form ').children[1].children[0],\n    formInput: document.querySelector('.feedback-form '),\n    submitButton:document.querySelector('.feedback-form button'),\n}\n\nconst formData = {\n    inputData:\"\",\n    messageData:\"\"\n}\nlet previousFormData;\n\n try {\n    previousFormData = JSON.parse(localStorage.getItem(\"feedback-form-state\"));\n    //console.log(previousFormData);\n} catch (error) {\n    console.log(error);\n}\n if ((previousFormData.inputData)&&(previousFormData.messageData)) {\n     refs.emailInput.value = previousFormData.inputData;\n     refs.messageInput.value = previousFormData.messageData;\n } \n \nconst formInputHandler = (event) => { \n    formData.inputData = refs.emailInput.value;\n    formData.messageData = refs.messageInput.value;\n    localStorage.setItem(\"feedback-form-state\", JSON.stringify(formData));\n}\n\nconst submitHandler = (event) => {\n    event.preventDefault();\n    console.log(\"inputData: \" + previousFormData.inputData);\n    console.log(\"messageData: \" + previousFormData.messageData);\n    event.currentTarget.reset();\n }\n\nrefs.formInput.addEventListener('input', formInputHandler);\nrefs.formInput.addEventListener(\"submit\", submitHandler);\n\n"]}